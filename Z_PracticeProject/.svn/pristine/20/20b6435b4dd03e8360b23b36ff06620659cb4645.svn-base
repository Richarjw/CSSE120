"""
The  **** PRACTICE **** Python Capstone Project.

CSSE 120 - Introduction to Software Development.
Team members: Ryan Coffman, Joe Jagiella, Jack Richard (all of them).

The primary author of this module is: Ryan Coffman.
"""
# TODO: Put the names of ALL team members in the above where indicated.
#       Put YOUR NAME in the above where indicated.

import m0
import m1
import m3
import m4

import tkinter
from tkinter import ttk
import new_create

# ----------------------------------------------------------------------
# TODO: Do the following in STAGES, using ITERATIVE ENHANCEMENT.
#       That means that for each stage, you implement it, TEST it,
#       COMMIT your work WITH A SHORT, REASONABLE MESSAGE,
#       and then and only then continue to the next stage.
#
# Your ultimate goal for your part of this Practice Project is to have
# a correctly function button:
#   -- Go N seconds
# plus two entry boxes in which the user can enter:
#   -- speed at which the robot is to move
#   -- seconds the robot is to move
#
# Use the following ITERATIVE ENHANCEMENT PLAN, where each stage
# augments the preceding stages:
#
#   Stage 1: Frame appears with the button and Entry boxes on it.
#
#   Stage 2: Button prints a message, as a stub.
#              -- A STUB is placeholder code that lets you do some
#                 testing even before you have finished the real code.
#
#   Stage 3: Button prints the values of the two entry boxes,
#              again as a stub.
#
#   Stage 4: Button works correctly.
#              That is, pressing it causes a robot to move at the speed
#              in the first entry box, for the number of seconds
#              in the second entry box.
#
#   NOTES:
#     You will have to decide where in your code it is best to construct
#     the robot, and where it is best to do a robot shutdown.
#     Keep in mind that:
#       -- You will eventually use your teammate's connect and
#          disconnect buttons to construct the robot.
#       -- That same robot will eventually be used throughout the code.
#
#     TEST using the SIMULATOR for now.
#
# Do ALL your work in THIS file.  Do not touch m0!
# You will INTEGRATE work in the NEXT session, using m0 to do so.
# ----------------------------------------------------------------------


class DataContainer2():
    """ A container for the data shared across the application. """

    def __init__(self):
        """ Initializes instance variables (fields). """
        # Add     self.FOO = BLAH     here as needed.
        self.entry_for_seconds = None
        self.label_for_seconds = None
        self.entry_for_speed = None
        self.label_for_speed = None
        self.final_label = None


def main():
    """
    Tests functions in this module.
    Intended to be used internally by the primary author of this module.
    """
    print('-------------------------------')
    print('Testing functions in module m2:')
    print('-------------------------------')
    root = tkinter.Tk()

    main_frame = ttk.Frame(root, padding=(30, 10), relief='raised')
    main_frame.grid()

    data = DataContainer2()
    port = 'sim'
    robot = new_create.Create(port)

    go_button = ttk.Button(main_frame, text='Go')
    seconds_label = ttk.Label(main_frame, text='Enter # of seconds:')
    seconds_entry = ttk.Entry(main_frame, width=20)
    speed_label = ttk.Label(main_frame, text='Enter speed:')
    speed_entry = ttk.Entry(main_frame, width=20)

    go_button.grid()

    seconds_label.grid(row=1, column=0)
    seconds_entry.grid(row=1, column=1)
    speed_label.grid(row=2, column=0)
    speed_entry.grid(row=2, column=1)


    data.entry_for_seconds = seconds_entry
    data.label_for_seconds = seconds_label
    data.entry_for_speed = speed_entry
    data.label_for_speed = speed_label

    final_label = ttk.Label(main_frame, text='The robot is currently not moving')
    data.final_label = final_label
    data.final_label.grid()

    go_button['command'] = lambda: my_frame(main_frame, data, robot)

    root.mainloop()
    robot.shutdown


def my_frame(root, data, robot):
    """
    Constructs and returns a Frame (on the given root window)
    that contains this module's widgets.
    Also sets up callbacks for this module's widgets.

    Preconditions:
      :type root: tkinter.Tk
      :type data: DataContainer2
    """
    format_string = 'The robot is going {} cm/s for {} seconds'
    answer = format_string.format(data.entry_for_speed.get(), data.entry_for_seconds.get())
    data.final_label['text'] = answer
    robot.go()


# ----------------------------------------------------------------------
# If this module is running at the top level (as opposed to being
# imported by another module), then call the 'main' function.
# ----------------------------------------------------------------------
if __name__ == '__main__':
    main()
